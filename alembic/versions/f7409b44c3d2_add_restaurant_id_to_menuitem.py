"""Add restaurant_id to MenuItem

Revision ID: f7409b44c3d2
Revises: 23a1f18eb6c5
Create Date: 2025-04-30 10:38:44.405781

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f7409b44c3d2'
down_revision = '23a1f18eb6c5'
branch_labels = None
depends_on = None


def upgrade():
    # Drop leftover temp table if exists
    conn = op.get_bind()
    conn.execute("DROP TABLE IF EXISTS menu_categories_new")

    # --- Add restaurant_id to menu_items via table recreation (SQLite safe) ---
    # 1. Rename old table
    op.execute("ALTER TABLE menu_items RENAME TO menu_items_old")
    # 2. Create new table with restaurant_id
    op.create_table(
        'menu_items',
        sa.Column('id', sa.Integer, primary_key=True),  # Remove index=True to avoid duplicate index
        sa.Column('restaurant_id', sa.String, sa.ForeignKey('restaurants.restaurant_id'), index=True),
        sa.Column('name', sa.String, nullable=False),
        sa.Column('description', sa.String, nullable=True),
        sa.Column('price', sa.Float, nullable=False),
        sa.Column('available', sa.Boolean, default=True),
        sa.Column('category_id', sa.Integer, sa.ForeignKey('menu_categories.id')),
    )
    # 3. Copy data (restaurant_id will be NULL)
    op.execute("INSERT INTO menu_items (id, name, description, price, available, category_id) SELECT id, name, description, price, available, category_id FROM menu_items_old")
    # 4. Drop old table
    op.execute("DROP TABLE menu_items_old")
    # 5. Drop index if exists (SQLite safety)
    op.execute("DROP INDEX IF EXISTS ix_menu_items_restaurant_id")
    # 6. Create index
    op.create_index(op.f('ix_menu_items_restaurant_id'), 'menu_items', ['restaurant_id'], unique=False)
    # 6. Create foreign key
    # (already set in create_table)
    # --- End SQLite-safe migration ---


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'menu_items', type_='foreignkey')
    op.drop_index(op.f('ix_menu_items_restaurant_id'), table_name='menu_items')
    op.drop_column('menu_items', 'restaurant_id')
    op.drop_constraint(None, 'menu_categories', type_='foreignkey')
    op.alter_column('menu_categories', 'restaurant_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('menu_categories_new',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('restaurant_id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.restaurant_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_menu_categories_name')
    )
    # ### end Alembic commands ###
