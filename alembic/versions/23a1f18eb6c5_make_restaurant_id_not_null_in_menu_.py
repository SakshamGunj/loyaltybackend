"""Make restaurant_id NOT NULL in menu_categories

Revision ID: 23a1f18eb6c5
Revises: e4c3ec824012
Create Date: 2025-04-28 11:58:46.089014

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '23a1f18eb6c5'
down_revision = 'e4c3ec824012'
branch_labels = None
depends_on = None


def upgrade():
    # Ensure no NULLs exist in restaurant_id
    from sqlalchemy import text
    conn = op.get_bind()
    null_count = conn.execute(text("SELECT COUNT(*) FROM menu_categories WHERE restaurant_id IS NULL")).scalar()
    if null_count > 0:
        raise Exception("Cannot make restaurant_id NOT NULL: NULL values exist in menu_categories. Please update or remove these rows before upgrading.")

    # Create new table with NOT NULL constraint
    op.execute('''
        CREATE TABLE menu_categories_new (
            id INTEGER PRIMARY KEY,
            restaurant_id VARCHAR NOT NULL REFERENCES restaurants (restaurant_id),
            name VARCHAR NOT NULL UNIQUE,
            description VARCHAR,
            -- add other columns if any
            CONSTRAINT uq_menu_categories_name UNIQUE (name)
        )
    ''')
    op.execute('''
        INSERT INTO menu_categories_new (id, restaurant_id, name, description)
        SELECT id, restaurant_id, name, description FROM menu_categories
    ''')
    op.execute('DROP TABLE menu_categories')
    op.execute('ALTER TABLE menu_categories_new RENAME TO menu_categories')
    op.create_index(op.f('ix_menu_categories_restaurant_id'), 'menu_categories', ['restaurant_id'], unique=False)
    op.create_foreign_key(None, 'menu_categories', 'restaurants', ['restaurant_id'], ['restaurant_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'menu_categories', type_='foreignkey')
    op.alter_column('menu_categories', 'restaurant_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
